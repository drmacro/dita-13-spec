<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="IssueNumber13089" xml:lang="en-us">
<title>DITA 1.3 Proposal 13089 - Add learningObjectMap and learningGroupMap</title>
<refbody>
<section><title>Date and version information</title>  <ul>
<li>July 13, 2012. v.02</li>
<li>Champions: Mark Myers, Thilo Buchholz</li>
</ul>  </section>
<section><title>Original requirement</title>     <p>The DITA Learning and Training Specialization should support the storage of learning objects
        and learning groups as separate files on a file system or repository. Currently, it only
        supports the storage of the components within a learning object (such as a learningOverview
        an learningContent) as separate files.</p>    <p>In the 1.2 DITA model, learning objects are implemented using
the learningObject topicref element within a map or learningGroup.
Children of the learningObject including learningPlanRef, learningAssessmentRef,
learningOverviewRef, learningContentRef, and learningSummaryRef. These
elements contain references to separate files. However, it will often
be the case that an implementation requires that learning objects
themselves be stored as separate reusable files. In this way, multiple
learning maps could then reuse the same set of learning objects in
different aggregations.</p>   <p>Having such a construction as a standard
learning component of DITA would also encourage the creation of standard
reusable learning objects across organizations and companies. For
instance, software implementations today are often compromised of
hardware and software components from several companies. If these
companies all created educational materials using reusable learning
object elements, implementors could combine multiple learning objects
from all the companies to create a united and consistent learning
product. This is similar to the goals of SCORM; however, it improves
significantly on the concept. Since SCORM is mainly concerned with
the runtime format of educational materials, the source of the sharable
content objects could follow very different structures and semantics
and be visually formatted in many different ways, leading to a confusing
and inconsistent learning experience.</p>
   <p>Similarly, authors will also expect to be able to save collections of these learning objects
        as reusable components. For example, a software development organization may want to reuse
        such a standard grouping as an "introduction" is several maps. To enable this, DITA should
        also support the storage of learningGroup elements as separate reusable files. This would
        give DITA a consistent and symetrical reuse model for these elements. </p>  </section>
</refbody>
<reference id="use_cases">
<title>Use Cases</title>
<refbody>
<section><title>Use case: author uses learningObjectMapRef to reference
a learningObjectMap</title>    <p>The following example shows a learningObjectMapRef element. In this example, the
     learningObjectMapRef is being used in a map that references several learningObjectMap elements
     that are stored as separate instances. The learningGroup element is used to collect the
     learningObjectMapRef into logical groupings to create "units" for students. </p>    <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;map title="Sample DITA 1.2 learning content">
&lt;title>Sample DITA 1.2 learning content&lt;/title>
&lt;learningGroup navtitle="DITA Learning and Training Specialization">
  &lt;learningObjectMapRef href="lc_spec_overviewassump.ditamap" 
    navtitle="Overview and assumptions" 
    type="learningObjectMap"/>
  &lt;learningObjectMapRef href="lc_spec_ProbUnstructuredTop.ditamap" 
    navtitle="Problems with unstructured content" 
    type="learningObjectMap"/>
  &lt;learningObjectMapRef href="lc_spec_top_beneoverview.ditamap" 
    navtitle="The benefits of structured content for learning and training" 
    type="learningObjectMap"/>
  &lt;learningObjectMapRef href="lc_spec_WHYDITALearnOverview_top.ditamap" 
    navtitle="Why DITA for learning and training content?" 
    type="learningObjectMap"/>
  &lt;learningObjectMapRef 
    href="lc_spec_LearnSpec_top.ditamap" 
    navtitle="The DITA learning and training content specialization" 
    type="learningObjectMap"/>
&lt;/learningGroup>
&lt;/map>   </codeblock>   </section>
<section><title>Use case: author uses learningObjectMap to reference
a learningObject</title>    <p>The following example shows the learningObjectMap element referenced by the second
          learningObjectMapRef from the proceeding example (Problems with unstructured content).
          Here learningObjectMap is the root element of a standalone instance containing the
          learningObject and any child references. In this case, the learningObject contains
          references to instances containing a learningOverview, learningContent,
          learningPostAssessment, and learningSummary. The result is one self contained
          learningObjectMap that can be stored as an instance and referenced by many maps.</p>    <codeblock>&lt;learningObjectMap>
  &lt;title>Problems with unstructured content&lt;/title>
  &lt;learningObject navtitle="Problems with unstructured content">
    &lt;learningOverviewRef href="lc_spec_ProbUnstructuredOverview.dita"/>
    &lt;learningContentRef href="lc_spec_ProbWithUnstructured.dita"/> 
    &lt;learningPostAssessmentRef href="lc_spec_ProbUnstructuredAssess.dita"/>
    &lt;learningSummaryRef href="lc_spec_ProbUnstructuredSummary.dita"/>
  &lt;/learningObject>
&lt;/learningObjectMap></codeblock>   </section>
 <section><title>Use case: author uses learningGroupMapRef to reference a learningGroup</title>    <p>Similar to the need to store learning objects as separate files, it will likely also be a
          common request to store the collections of these learning objects into reusable learning
          groups. This would enable authors to quickly build multiple maps that may reuse common
          collections of learning objects. The following example shows a learningGroupMapRef
          element. In this example, the learningGroupMapRef is being used in a map that references
          several learningGroupMap elements that are stored as separate instances. </p>    <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;map title="Sample DITA 1.2 learning content">
&lt;title>Sample DITA 1.2 learning content&lt;/title>
&lt;learningGroupMapRef navtitle="DITA Learning and Training Specialization" 
  href="lc_spec.ditamap"
  type="learningGroupMap"/>
&lt;/map>   </codeblock>   </section>
 <section><title>Use case: author uses learningGroupMap to reference
 a learningGroup</title>    <p>The following example shows the learningGroupMap element referenced by the
          learningGroupMapRef from the proceeding example. Here learningGroupMap is the root element
          of a standalone instance containing a learningGroup. The result is one self contained
          learningGroupMap that can be stored as an instance and referenced by many maps.</p>    <codeblock>&lt;learningGroupMap id="lom_1">
  &lt;title>DITA Learning and Training Specialization&lt;/title>
  &lt;learningGroup navtitle="DITA Learning and Training Specializationp" ref="lc_group_DITALearningGroup.dita"/>
 &lt;/learningGroupMap/></codeblock>   </section>
</refbody>
</reference>
<reference id="benefits">
<title>Benefits</title>
<refbody>
<section>    <p>Address the following questions:     <ul>
<li>Who benefits?       <ul>
<li>Any company who implements the learning and training specilization would benefit from these
                  additions.</li>
                <li>Instructinal designers are very familar with the reusable learning object
                  concept but may be dismayed at the apparent complexity of trying to implement
                  learning objects as currently architected. Improving out of the box support for
                  learning objects and learning groups will more closely align with the expectations
                  of most instructions designers and more closely aligns with the intentions of
                  SCORM.</li>
<li>It is our hope that many compaines use the learningObjectMap and learningGroupMap element as
         described here. If so, then implementors would be able to mix learning objects from several
         compaines to create seamless and consistent learning content.</li>
                <li>Several implementors have already had to address these issues and have done so
                  through various methods. Having one standard approach would enable more
                  implementation consistency and encourage improved tool support.</li>
</ul>      </li>
<li>What are the benefits?       <ul>
<li>Reuse of learning objects in this manner will be a common scenario. The current architecture
         suggets that learning objects themelves be delivery method agnostic so that different maps
         can reuse the learning objects for different aggregrations. For instance, one learning
         object map be referenced by a large map for a 3 day istructor-led training class in a
         classroom and also offered in a half day Web-based e-learning. Having reusable learning
         objects will allow implementors to reuse learning objects among many such maps.</li>
 <li>Similarly, reuse of learning groups will also be a common scenario.</li>
                <li>Would align more closely common industry expectaations for learning
                  objects.</li>
                <li>Provides the opportunity for increased publicity about the benefits of DITA for
                  learning content.</li>
</ul>      </li>
</ul>    </p>     </section>
</refbody>
</reference>
<reference id="technical_requirements">
<title>Technical requirements</title>
<refbody>
<section><title>Technical requirements</title>    <p>Implement two new elements, learningObjectMapRef and learningObjectMap. The
          learningObjectMapRef would be a topicref specialization that could be an optional child of
          a map such as a bookmap, learningMap, or learningGroup. learningObjectMapRef would allow a
          reference to one learningObjectMap which could be a map specialization that would function
          as a wrapper element around one and only one learningObject element. This would enable the
          learningObjectMap to be stored as a separate file and referenced by the
          learningObjectMapRef in one or more maps. learningObjectMap could also support a child
          topicmeta which implementors could use to capture various information about the
          learningObjectMap. </p>
        <p> Implement two new elements, learningGroupMapRef andlearningGroupMap. The
          learningGroupMapRef would be a topicref specialization that could be an optional child of
          a map such as a bookmap or learningMap. learningGroupMapRef would allow a reference to one
          learningGroupMap which could be a map specialization that would function as a wrapper
          element around one and only one learningGroup element. This would enable the
          learningGroupMap to be stored as a separate file and referenced by the learningGroupMapRef
          in one or more maps. andlearningGroupMap could also support a child topicmeta which
          implementors could use to capture various information about the andlearningGroupMap. </p>   </section>
</refbody>
</reference>
</reference>
