<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<dita>
  <topic id="topic_aqh_5zt_3h">
    <title>Stage 3 proposal: Feature 13105, &lt;data> in &lt;list></title>
    <shortdesc>This proposal allows &lt;data> and &lt;data-about> to occur as direct children of the list elements &lt;ul>, &lt;ol>, &lt;sl>, and &lt;dl> and their specializations.</shortdesc>
    <body>
      <section>
        <title>Champion</title>
        <p>Eliot Kimber</p>
      </section>
      <section>
        <title>Tracking information</title>
        <simpletable frame="all" relcolwidth="1.0* 1.0* 1.0*">
          <sthead>
            <stentry>Event</stentry>
            <stentry>Date</stentry>
            <stentry>Links</stentry>
          </sthead>
          <strow>
            <stentry>Stage 1 proposal accepted</stentry>
            <stentry>13 March 2012</stentry>
            <stentry><xref
              href="https://www.oasis-open.org/apps/org/workgroup/dita/download.php/45489/minutes20120313.txt"
              format="txt"
              scope="external">https://www.oasis-open.org/apps/org/workgroup/dita/download.php/45489/minutes20120313.txt</xref></stentry>
          </strow>
          <strow>
            <stentry>Stage 2 proposal submitted</stentry>
            <stentry>18 June 2013</stentry>
            <stentry>DITA: <xref
              href="https://www.oasis-open.org/apps/org/workgroup/dita/download.php/49584/proposal-13105-data-in-list.dita"
              scope="external"
              format="html">https://www.oasis-open.org/apps/org/workgroup/dita/download.php/49584/proposal-13105-data-in-list.dita</xref>, HTML: <xref
              href="https://www.oasis-open.org/apps/org/workgroup/dita/download.php/49585/proposal-13105-data-in-list.html"
              format="html"
              scope="external">https://www.oasis-open.org/apps/org/workgroup/dita/download.php/49585/proposal-13105-data-in-list.html</xref></stentry>
          </strow>
          <strow>
            <stentry>Stage 2 proposal discussed</stentry>
            <stentry>9 July 2013, </stentry>
            <stentry><xref
              href="https://www.oasis-open.org/apps/org/workgroup/dita/download.php/49964/minutes20130709.txt"
              format="txt"
              scope="external">https://www.oasis-open.org/apps/org/workgroup/dita/download.php/49964/minutes20130709.txt</xref>, <xref
              href="https://www.oasis-open.org/apps/org/workgroup/dita/download.php/50041/minutes20130716.txt"
              format="txt"
              scope="external">https://www.oasis-open.org/apps/org/workgroup/dita/download.php/50041/minutes20130716.txt</xref></stentry>
          </strow>
          <strow>
            <stentry>Stage 2 proposal approved</stentry>
            <stentry>23 July 2013</stentry>
            <stentry><xref
              href="https://www.oasis-open.org/apps/org/workgroup/dita/download.php/50069/minutes20130723.txt"
              format="txt"
              scope="external">https://www.oasis-open.org/apps/org/workgroup/dita/download.php/50069/minutes20130723.txt</xref></stentry>
          </strow>
          <strow>
            <stentry>Stage 3 proposal submitted to reviewers</stentry>
            <stentry/>
            <stentry>Include names of reviewers</stentry>
          </strow>
          <strow>
            <stentry>Stage 3 proposal (this document) submitted</stentry>
            <stentry/>
            <stentry/>
          </strow>
        </simpletable>
      </section>
      <section>
        <title>Approved technical requirements</title>
        <p>The immediate use case is capturing metadata that reflects details of a list from legacy content, such as the numbering or bullet style details and the initial number. I can think of other
          list-specific metadata that might be useful, such as subject classification or whatever. </p>
        <p>We should be following a general principle of allowing &lt;data> anywhere that it isn't clearly inappropriate, and there's no obvious reason why it would be inappropriate in a list.</p>
      </section>
      <section>
        <title>Dependencies or interrelated proposals</title>
        <p>Proposal 13106, learning2 domain, also defines specializations of lists that would need to reflect this change.</p>
      </section>
      <section>
        <title>Modified DTDs</title>
        <p>The following elements need to be have their content models updated:<ul
          id="ul_am5_pd1_4k">
          <li>dl</li>
          <li>hazard-d/messagepanel</li>
          <li>learningBase/lcObjectivesGroup</li>
          <li>learning-d/lcAnswerOptionGroup</li>
          <li>learning-d/lcSequenceOptionGroup</li>
          <li>ol</li>
          <li>parml</li>
          <li>sl</li>
          <li>task/choices</li>
          <li>task/steps</li>
          <li>task/steps-unordered</li>
          <li>task/substeps</li>
          <li>taskreq-d/reqconds</li>
          <li>taskreq-d/reqpers</li>
          <li>taskreq-d/safety</li>
          <li>taskreq-d/supeqli</li>
          <li>taskreq-d/sparesli</li>
          <li>taskreq-d/supplyli</li>
          <li>ul</li>
          </ul></p>
        <fig
          id="fig_jrb_j12_hl">
          <title>Modifications to commonElements.mod</title>
          <dl>
            <dlentry>
              <dt>dl</dt>
              <dd>
                <codeblock>&lt;!ENTITY % dl.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%dlhead;)?, 
                         (%dlentry;)+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>ol</dt>
              <dd>
                <codeblock>&lt;!ENTITY % ol.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%li;)+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>sl</dt>
              <dd>
                <codeblock>&lt;!ENTITY % sl.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%sli;)+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>ul</dt>
              <dd>
                <codeblock>&lt;!ENTITY % ul.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%li;)+)"
></codeblock>
              </dd>
            </dlentry>
          </dl>
        </fig>
        <fig
          id="fig_cgy_p12_hl">
          <title>Modifications to hazardstatementDomain.mod</title>
          <dl>
            <dlentry>
              <dt>messagepanel</dt>
              <dd>
                <codeblock>&lt;!ENTITY % messagepanel.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%typeofhazard;),
                         (%consequence;)*,
                         (%howtoavoid;)+)"
></codeblock>
              </dd>
            </dlentry>
          </dl>
        </fig>
        <fig
          id="fig_h1p_smj_hl">
          <title>Modifications to learningBase.mod</title>
          <dl>
            <dlentry>
              <dt>lcObjectivesGroup</dt>
              <dd>
                <codeblock>&lt;!ENTITY % lcObjectivesGroup.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%lcObjective;)+)"
></codeblock>
              </dd>
            </dlentry>
          </dl>
        </fig>
        <fig
          id="fig_t2m_v12_hl">
          <title>Modifications to learningDomain.mod</title>
          <dl>
            <dlentry>
              <dt>lcAnswerOptionGroup</dt>
              <dd>
                <codeblock>&lt;!ENTITY % lcAnswerOptionGroup.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%lcAnswerOption;)+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>lcSequenceOptionGroup</dt>
              <dd>
                <codeblock>&lt;!ENTITY % lcSequenceOptionGroup.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%lcSequenceOption;)+)"
></codeblock>
              </dd>
            </dlentry>
          </dl>
        </fig>
        <fig
          id="fig_otr_jnj_hl">
          <title>Modifications to programmingDomain.mod</title>
          <dl>
            <dlentry>
              <dt>parml</dt>
              <dd>
                <codeblock>&lt;!ENTITY % parml.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%plentry;)+)"
></codeblock>
              </dd>
            </dlentry>
          </dl>
        </fig>
        <fig
          id="fig_zkw_4nj_hl">
          <title>Modifications to task.mod</title>
          <dl>
            <dlentry>
              <dt>choices</dt>
              <dd>
                <codeblock>&lt;!ENTITY % choices.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%choice;)+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>steps</dt>
              <dd>
                <codeblock>&lt;!ENTITY % steps.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%stepsection;)?,
                         (%step;))+"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>steps-unordered</dt>
              <dd>
                <codeblock>&lt;!ENTITY % steps-unordered.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%stepsection;)?,
                         (%step;))+"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>substeps</dt>
              <dd>
                <codeblock>&lt;!ENTITY % substeps.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%substep;)+)"
></codeblock>
              </dd>
            </dlentry>
          </dl>
        </fig>
        <fig
          id="fig_jf2_nzd_hl">
          <title>Modifications to taskreqDomain.mod</title>
          <dl>
            <dlentry>
              <dt>reqconds</dt>
              <dd>
                <codeblock>&lt;!ENTITY % reqconds.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%noconds;) |
						 ((%reqcond;) |
                          (%reqcontp;))+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>reqpers</dt>
              <dd>
                <codeblock>&lt;!ENTITY % reqpers.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%personnel;),
						 ((%perscat;)?,
                          (%perskill;)?,
                          (%esttime;)?)?)+
"></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>safety</dt>
              <dd>
                <codeblock>&lt;!ENTITY % safety.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%nosafety;) |
                         (%safecond;)+)"></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>sparesli</dt>
              <dd>
                <codeblock>&lt;!ENTITY % sparesli.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%spare;)+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>supeqli</dt>
              <dd>
                <codeblock>&lt;!ENTITY % supeqli.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%supequi;)+)"
></codeblock>
              </dd>
            </dlentry>
            <dlentry>
              <dt>supplyli</dt>
              <dd>
                <codeblock>&lt;!ENTITY % supplyli.content
                       "(<b>((%data;) | </b>
                          <b>(%data-about;))*,</b>
                         (%supply;)+)"
>
</codeblock>
              </dd>
            </dlentry>
          </dl>
        </fig>
        <fig
          id="fig_mz5_hpj_hl">
          <title>Strict Taskbody Constraint</title>
          <p>Restores 1.2 definitions for &lt;steps>, &lt;steps-unordered>, and &lt;substeps>.</p>
          <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!-- ============================================================= -->
&lt;!--                    HEADER                                     -->
&lt;!-- ============================================================= -->
&lt;!--  MODULE:    DITA Strict Taskbody Constraint                   -->
&lt;!--  VERSION:   1.2                                               -->
&lt;!--  DATE:      November 2009                                     -->
&lt;!--                                                               -->
&lt;!-- ============================================================= -->

&lt;!-- ============================================================= -->
&lt;!--                    PUBLIC DOCUMENT TYPE DEFINITION            -->
&lt;!--                    TYPICAL INVOCATION                         -->
&lt;!--                                                               -->
&lt;!--  Refer to this file by the following public identifier or an 
      appropriate system identifier 
PUBLIC "-//OASIS//ELEMENTS DITA Strict Taskbody Constraint//EN"
      Delivered as file "strictTaskbodyConstraint.mod"             -->

&lt;!-- ============================================================= -->
&lt;!-- SYSTEM:     Darwin Information Typing Architecture (DITA)     -->
&lt;!--                                                               -->
&lt;!-- PURPOSE:    Declaring the domain entity for the strict task   -->
&lt;!--             constraint module                                 -->
&lt;!--                                                               -->
&lt;!-- ORIGINAL CREATION DATE:                                       -->
&lt;!--             April 2008                                        -->
&lt;!--                                                               -->
&lt;!--             (C) Copyright OASIS Open 2008, 2009.              -->
&lt;!--             All Rights Reserved.                              -->
&lt;!--                                                               -->
&lt;!--  UPDATES:                                                     -->
&lt;!-- ============================================================= -->


&lt;!-- ============================================================= -->
&lt;!--                    Strict Taskbody ENTITIES                   -->
&lt;!-- ============================================================= -->

&lt;!ENTITY taskbody-constraints     
  "(topic task strictTaskbody-c)"
>

&lt;!ENTITY % prereq          "prereq">
&lt;!ENTITY % context         "context">
&lt;!ENTITY % steps           "steps">
&lt;!ENTITY % steps-unordered "steps-unordered">
&lt;!ENTITY % result          "result">
&lt;!ENTITY % example         "example">
&lt;!ENTITY % postreq         "postreq">

&lt;!ENTITY % taskbody.content
                       "((%prereq;)?, 
                         (%context;)?,
                         (%steps; | 
                          %steps-unordered;)?, 
                         (%result;)?, 
                         (%example;)?, 
                         (%postreq;)?)"
>

<b>&lt;!-- Disallow initial &lt;data> or &lt;data-about> --></b>
<b>&lt;!ENTITY % steps.content
                       "((%stepsection;)?,
                         (%step;))+"
></b>

<b>&lt;!ENTITY % steps-unordered.content
                       "((%stepsection;)?,
                         (%step;))+"
></b>

<b>&lt;!ENTITY % substeps.content
                       "((%substep;)+)"
></b>
&lt;!-- ================== End Strict Taskbody Entities ============= --></codeblock>
        </fig>
      </section>
      <section>
        <title>Modified specification documentation</title>
        <p>No changes to existing language. Only generated Contains and Contained By sections will be affected by this change.</p>
      </section>
    </body>
  </topic>
</dita>
