<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="IssueNumber00" xml:lang="en-us">
<title>DITA 1.3 proposed feature 13027</title>
<shortdesc>Allow draft-comment and required-cleanup elements
    universally.</shortdesc>
<refbody>
<section><title>Date and version information</title><p>Include the following information:<ul>
     <li>Initial phase 2 proposal: 10 June 2012</li>
        <li>Phase 2 proposal updated: 16 Feb 2013</li>
     <li>Champion: Eliot Kimber</li>
    </ul></p></section>
<section>
      <title>Original requirement</title>
      <p>From Su-Laine Yeo:</p>
      <lq>DITA currently allows draft-comment only in certain body elements, but
        I don't see a semantic reason that it shouldn't also belong in title,
        shortdesc, and map elements as well. Unless I already know the content
        model, I wouldn't look for it in the "Body elements" section [of the
        lang spec].</lq>
      <p>In many cases, draft comments are used entirely within an editing
        context and are never expected to be rendered in outputs. In that case,
        it makes sense to allow draft comments pretty much anywhere because they
        are just XML elements and XML editors can always make them available
        even if they would not be seen in a rendition (because they are in
        metadata elements or within titles or whatever). In this case, concerns
        with rendering draft comments that are not in body content are not
        relevant because there is no expectation that they will be rendered.</p>
    </section>
<section><title>Use cases</title><p>There is often a need or desire to associate draft comments with specific
        elements: titles, phrases within paragraphs, etc. There is no obvious
        reason to disallow draft-comment in these places.</p></section>
<section><title>Benefits</title><p>Address the following questions:<ul>
     <li>This change benefits anyone who uses &lt;draft-comment> to annotate
          DITA documents.</li>
     <li>Authors will be able to put &lt;draft-comment> as near to the text
          being annotated as possible.</li>
     <li>Many, if not most, DITA authors use &lt;draft-comment> to annotate
          their source.</li>
     <li>This feature will have a significant positive impact on authors,
          removing a common source of confusion and frustration.</li>
    </ul></p></section>
<section><title>Costs</title><p>Outline the impact (time and effort) of the feature on the following groups:<ul>
     <li>Maintainers of the DTDs and XSDs:<ul
          id="ul_hh4_cvt_ng">
          <li>Add &lt;draft-comment>  and &lt;required-cleanup> to the following
            places that do not allow it in 1.2:<ul
            id="ul_t1q_dvt_ng">
            <li>&lt;term></li>
            <li>&lt;keyword></li>
            <li>&lt;navtitle></li>
            <li>&lt;searchtitle></li>
            <li>&lt;alt></li>
            <li>&lt;consequence>, &lt;howtoavoid>, &lt;typeofhazard> (hazard
              domain)</li>
            <li>&lt;msgph> (software domain)</li>
            <li>%data.cnt; (&lt;data>, &lt;glossProperty>)</li>
            <li>%desc.cnt</li>
            <li>%fig.cnt</li>
            <li>%figgroup.cnt</li>
            <li>%fn.cnt</li>
            <li>%shortquote.cnt</li>
            <li>%term.cnt (&lt;dt>)</li>
            <li>%title.cnt (&lt;title>, &lt;shortdesc>, &lt;dthd>, &lt;ddhd>,
              &lt;glossterm>) [NOTE: remove draft-comment from
              %shortdesc.content]</li>
            <li>%xreftext.cnt</li>
            <li>%xrefph.cnt</li>
            </ul></li>
          <li>
            <note>While %word.cnt; would seem like an appropriate place to add
              draft-comment and required-cleanup in order to make them available
              everywhere, it would have the effect of allowing them where they
              are almost certainly not appropriate, including index entries and
              other very-constrained contexts.</note>
          </li>
          <li>Change definition of elements in highlighDomain.mod to
            %ph.content; from current content models (ensures these elements
            exactly match &lt;ph> content model).</li>
          <li>Change codeph.content value to "%ph.content;" (programming
            domain)</li>
          </ul></li>
     <li>Editors of the DITA specification:<ul>
       <li>How many new topics will be required?<ul
            id="ul_g1q_jyt_ng">
            <li>No new topics</li>
            </ul></li>
       <li>How many existing topics will need to be edited?<ul
            id="ul_jkk_kyt_ng">
            <li>Topic for &lt;draft-comment> will need to be updated to clarify
              implications of having &lt;draft-comment> in contexts where
              display of the comment is not always appropriate or natural, such
              as titles, metadata elements and so on. Will need to make it clear
              that there is no expectation that draft comments will be presented
              literally in those contexts in renditions.</li>
            <li>The generated content model descriptions for elements where
              &lt;draft-comment> is being added will need to be
              regenerated.</li>
            </ul></li>
       <li>Will the feature require substantial changes to the information
            architecture of the DITA specification?<ul
            id="ul_ezr_ryt_ng">
            <li>The feature does not represent a substantial change to the
              architecture. </li>
            </ul></li>
      </ul></li>
     <li>Vendors of tools:<ul
          id="ul_g4z_vyt_ng">
          <li>XML editors will need to allow editing of the updated content
            models.</li>
          <li>Processors may need to change how they handle draft comments or
            assumptions they make about how and where they can be
            presented.</li>
          </ul></li>
     <li>DITA community-at-large. Will this feature add to the perception that
          DITA is becoming too complex? <ul
          id="ul_lsq_yyt_ng">
          <li>This change should not add to the perception of complexity for
            authors as it simply allows them to do something many assume they
            should already be able to do, namely put draft comments pretty much
            anywhere they can put text.</li>
          </ul></li>
    </ul></p></section>
<section><title>Technical requirements</title><p>Update the existing content models as described above under "costs".</p>
      <p>Processors will need to provide appropriate ways to render draft
        comments that occur outside of normal topic body content, such as within
        metadata elements or titles. Rendering options could include:<ul
        id="ul_rkx_hzt_ng">
        <li>Present draft comments as footnotes.</li>
        <li>Render draft comments as marginalia.</li>
        <li>Render draft comments in the nearest flowed content area, for
          example, after a title for comments within titles.</li>
        <li>Collect draft comments in a separate area as for end notes.</li>
        <li>Produce a separate draft-comment report that shows the comments and
          the element that contains it.</li>
        </ul></p></section>
<section><title>Examples</title><p>Draft comment within a topic title:</p>
      <codeblock>&lt;topic id="topic_lxq_jnf_5g">
  &lt;title>Topic 
    title<b>&lt;draft-comment author="wek"
      >Make title more specific&lt;/draft-comment></b>&lt;/title>
  ....
&lt;/topic></codeblock>
      <p>Draft comment within a
        figure:<codeblock>  &lt;body>
    &lt;fig>
      &lt;title>Polymerase Reduction Reaction&lt;/title>
      <b>&lt;draft-comment author="wek"
        >Need a picture showing the reaction.&lt;/draft-comment></b>
    &lt;/fig>
  &lt;/body>
</codeblock></p></section>
</refbody>
</reference><?Pub Caret -3?>
<?Pub *0000003625?>
