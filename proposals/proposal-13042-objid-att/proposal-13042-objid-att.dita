<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="IssueNumber00" xml:lang="en-us">
<title>DITA 1.3 proposed feature 13042 new @objid attribute</title>
<shortdesc>Provides a new common attribute @objid for holding system-specific
    "object identifiers" for elements.</shortdesc>
<refbody>
<section><title>Date and version information</title><p>Include the following information:<ul>
     <li>Completed: 17 June 2013</li>
     <li>Champion: Eliot Kimber</li>
    </ul></p></section>
<section><title>Original requirement</title>Systems can use the "@xtrf" (trace
      filename) attribute for this, but that is a bit of a hack. Most CMS
      systems that manage elements as objects use the technique of adding object
      IDs to the XML content when it is exported so that the elements can be
      correlated to their original objects upon re-ingestion to the CMS.
      Providing a standard place to put that object ID would remove the need for
      CMS systems to do something which must, by the constraints of DITA, be
      either non-DITA-conforming (adding CMS-specific attributes not specialized
      from @base) or create a CMS-specific specialization (for example, to
      define a specialization of &lt;data> to hold the object ID), or use
      something less reliable, such as processing instructions.</section>
<section><title>Use cases</title><p>The basic use case is adding object IDs to DITA content on initial ingestion
        into a component content management system (CMS)  so that the content
        can be re-exported, modified, and re-ingested with unambiguous
        correlation between the objects now stored in the CMS and the incoming
        updated content. This use case can be summarized as:<ol
        id="ol_t3n_225_nk">
        <li>A DITA document is presented to a component content management
          system (CMS) for ingestion (loading). The CMS has been configured to
          treat one or more DITA elements as objects within the system.</li>
        <li>The DITA document is loaded to the CMS and system-specific object
          identifiers are generated and added to each element to be treated as
          an object using the @objid attribute, e.g., each topic element. The
          result would look like
          this:<codeblock>&lt;topic id="topicid"
  <b>objid="648873"</b>
>
 &lt;title>My Topic&lt;/title>
 ...
&lt;/topic></codeblock></li>
        <li>The DITA document is exported out of the CMS with the @objid
          attributes preserved.</li>
        <li>The DITA document is modified without disturbing or duplicating any
          @objid attributes.</li>
        <li>The modified DITA document is presented to the CMS for update. The
          CMS examines the @objid attributes, along with any other information
          it might receive as part of the update request, and associates the
          incoming XML elements with their corresponding existing objects within
          the CMS and updates them as appropriate.</li>
        </ol></p>
      <p>Note that the details of this type of update process are necessarily
        system dependent and also dependent on whatever business rules are in
        effect. This proposal does not try to solve the general challenge of
        making update following export completely reliable. It simply provides a
        standard place to put the minimum information that most, if not all, CMS
        systems need in order to have any possibility of correlating objects in
        the incoming XML to objects already in the system. </p></section>
<section><title>Benefits</title><p>Address the following questions:<ul>
     <li>Who will benefit from this feature?<p>The benefits accrue to the
          implementors and users of component content management systems such
          that they can avoid non-standard and proprietary ways of capturing
          object identifiers in DITA content, further supporting interchange and
          interoperation of DITA content and processors. </p></li>
     <li>What is the expected benefit?<p>The benefit is having a single,
          standard way to satisfy a common requirement: capturing CMS-specific
          object IDs in DITA content.</p></li>
     <li>How many people probably will make use of this feature? For example,
          everyone, many, or few.<p>This feature could be of benefit,
          potentially, to all DITA users who use CMS systems to manage their
          DITA content.</p></li>
     <li>How much of a positive impact is expected for the users who will make use of the feature?
      For example, significant or minor.</li>
    </ul></p></section>
<section><title>Costs</title><p>Outline the impact (time and effort) of the feature on the following groups:<ul>
     <li>Maintainers of the DTDs and XSDs</li>
     <li>Editors of the DITA specification:<ul>
       <li>How many new topics will be required?</li>
       <li>How many existing topics will need to be edited?</li>
       <li>Will the feature require substantial changes to the information architecture of the DITA
        specification? If so, what?</li>
      </ul></li>
     <li>Vendors of tools: XML editors,component content management systems, processsors, etc.</li>
     <li>DITA community-at-large. Will this feature add to the perception that DITA is becoming too
      complex? Will it be simple for end users to understand?</li>
    </ul></p></section>
<section><title>Technical requirements</title>
   <note type="important">This section must be complete in order for the proposal to be
    approved.</note><p>Provide a detailed description of how the solution will work. Be sure to include the following details:<dl>
     <dlentry>
      <dt>Processing feature</dt>
      <dd>
       <ul>
        <li>How, in general, will the feature work?</li>
        <li>How will authors take advantage of the new feature?</li>
        <li>Will the feature have an impact on other processing features? For example, will the
         proposed feature have an impact on key resolution?</li>
        <li>What edge cases need to be considered?</li>
       </ul>
      </dd>
     </dlentry>
     <dlentry>
      <dt>Topic or map specialization</dt>
      <dd>Name of the new module, for example, <term>Glossary</term> or <term>Subject
       scheme</term></dd>
     </dlentry>
     <dlentry>
      <dt>Domain</dt>
      <dd>List of topic or map types that will include the domain</dd>
     </dlentry>
     <dlentry>
      <dt>Element</dt>
      <dd>
       <ul>
        <li>Element name and attributes</li>
        <li>Description of the element, including any processing requirements</li>
        <li>Description of where the element will be permissable</li>
        <li>Is the element translatable? If yes, is it a block or phrase (subflow) element?</li>
       </ul>
      </dd>
     </dlentry>
     <dlentry>
      <dt>Attributes</dt>
      <dd>
       <ul>
        <li>Name of the attribute</li>
        <li>Elements for which the attributes will apply, for example, "new global attribute for
         conref-atts group" or "new specialized attribute for learning topics"</li>
        <li>Processing expectations that are  associated with the new attribute</li>
        <li>Does the attribute contain translatable text? This should be avoided, so if the answer
         is "yes," you must explain why.</li>
       </ul>
      </dd>
     </dlentry>
     <dlentry>
      <dt>Overall usability</dt>
      <dd>Discuss the impact to current DITA users.</dd>
     </dlentry>
    </dl></p></section>
<section><title>Examples</title><p>Provide examples of the proposed feature. Include an example for each of the use cases. Be sure
    to include edge cases, if known.</p></section>
</refbody>
</reference><?Pub Caret -3?>
<?Pub *0000003625?>
