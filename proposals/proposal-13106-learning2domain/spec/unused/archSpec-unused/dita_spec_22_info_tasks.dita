<?xml version="1.0" encoding="utf-8"?>
<!--Arbortext, Inc., 1988-2005, v.4002-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="dita_spec_2_1_info_tasks"  xml:lang="en-us">
<title>Tasks</title>
<shortdesc>Task topics answer "How do I?" questions, and have a well-defined
structure that describes how to complete a procedure to accomplish a specific
goal.</shortdesc>
<conbody>
<section><title>Why tasks?</title><p>Tasks are the essential building blocks
for providing procedure information. A task topic answers the "How do I?"
question by providing precise step-by-step instructions detailing what to
do and the order in which to do it. The task topic includes sections for describing
the context, prerequisites, expected results, and other aspects of a task. </p></section>
<section><title>Task structure</title><p>The &lt;task> element is the top-level
element for a task topic. Every task topic contains a &lt;title> and a &lt;taskbody>
and optional  &lt;titlealts>, &lt;shortdesc> or &lt;abstract>, &lt;prolog>, &lt;related-links>,
and nested topics<?Pub Caret?>.</p><p>The &lt;taskbody> element is the main
body-level element inside a task topic. A task body has a very specific structure,
with the following elements in this order: &lt;prereq>, &lt;context>, &lt;steps>, &lt;result, &lt;example>
and &lt;postreq>. Each of the body sections is optional.</p><dl><dlentry>
<dt>&lt;prereq></dt>
<dd>Describes information needed before starting the current task.</dd>
</dlentry><dlentry>
<dt>&lt;context></dt>
<dd>Provides background information for the task. This information helps the
user understand what the purpose of the task is and what they will gain by
completing the task. This section should be brief and does not replace or
recreate a concept topic on the same subject, although the context section
may include some conceptual information.</dd>
</dlentry><dlentry>
<dt>&lt;steps></dt>
<dd>Provides the main content of the task topic. A task consists of a series
of steps that accomplish the task. The &lt;steps> section must have one or
more &lt;step> elements, which provide the specifics about each step in in
the task.<p>The &lt;step> element represents an action that a user must follow
to accomplish a task. Each step in a task must contain a command &lt;cmd>
element which describes the particular action the user must do to accomplish
the overall task. The step element can also contain information &lt;info>,
substeps &lt;substeps>, tutorial information &lt;tutorialinfo>, a step example &lt;stepxmp>,
choices &lt;choices> or a stepresult &lt;stepresult>, although these are optional.</p></dd>
</dlentry><dlentry>
<dt>&lt;result></dt>
<dd>Describes the expected outcome for the task as a whole. </dd>
</dlentry><dlentry>
<dt>&lt;example></dt>
<dd>Provides an example that illustrates or supports the task. </dd>
</dlentry><dlentry>
<dt>&lt;postreq></dt>
<dd>Describes steps or tasks that the user should do after the successful
completion of the current task. It is often supported by links to the next
task or tasks in the &lt;related-links> section.</dd>
</dlentry></dl></section>
<example>Hereâ€™s an example of a task topic.<pre xml:space="preserve">&lt;task id="ertx">
 &lt;title>Creating an ERTX file&lt;/title>
 &lt;taskbody>
  &lt;context>Each morning before breakfast you need to 
create a fresh ERTX file.&lt;/context>
  &lt;steps>
   &lt;step>&lt;cmd>Start ERTX.&lt;/cmd>&lt;/step>
   &lt;step>&lt;cmd>Click New ERTX File.&lt;/cmd>&lt;/step>
  &lt;/steps>
  &lt;result>You now have your ERTX file for today!&lt;/result>
 &lt;/taskbody>
&lt;/task>
</pre></example>
<section><title>Modules</title><sl>
<sli>task.mod (DTD)</sli>
<sli>taskMod.xsd, taskGrp.xsd (Schema)</sli>
</sl></section>
</conbody>
</concept>
<?Pub *0000003809?>
