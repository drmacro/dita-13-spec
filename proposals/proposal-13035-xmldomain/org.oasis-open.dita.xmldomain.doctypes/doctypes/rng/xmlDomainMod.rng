<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0">
<moduledesc xmlns="http://dita.oasis-open.org/architecture/2005/">
   <moduletitle>DITA XML Construct Domain</moduletitle>
   <headercomment><![CDATA[
============================================================= 
                    HEADER                                     
 ============================================================= 
  MODULE:    DITA XML Mention Domain                             
  VERSION:   1.3                                                
  DATE:      November 2013                                      
                                                               
 ============================================================= 

 =============================================================      
 ]]></headercomment>
   <moduleMetadata>
     <modulePublicIds>
       <dtdMod>-//OASIS//ELEMENTS DITA XML Domain//EN</dtdMod>
       <dtdEnt>-//OASIS//ENTITIES DITA XML Domain//EN</dtdEnt>
       <xsdMod>urn:oasis:names:tc:dita:xsd:xmlDomain.xsd</xsdMod>
       <rncMod>urn:oasis:names:tc:dita:rnc:xmlDomain.rnc</rncMod>
       <rngMod>urn:oasis:names:tc:dita:rng:xmlDomain.rng</rngMod>
     </modulePublicIds>
   </moduleMetadata>
 </moduledesc>  <!-- Define the domain values of this module -->
  
  <define name="domains-att-contribution" combine="choice">
    <value>(topic markup-d xml-d)</value>
  </define>
  <!-- Define domain extension patterns -->
  <define name="xml-d-keyword">
    <choice>
      <ref name="numcharref.element"/>
      <ref name="parameterentity.element"/>
      <ref name="textentity.element"/>
      <ref name="xmlatt.element"/>
      <ref name="xmlelement.element"/>
      <ref name="xmlnsname.element"/>
      <ref name="xmlpi.element"/>
    </choice>
  </define>
  <!-- Extend the patterns with the domain contribution -->
  <define name="keyword" combine="choice">
    <ref name="xml-d-keyword"/>
  </define>
  <!-- Define elements content and attributes -->
  <!-- LONG NAME: Numeric character reference (&#10;, &#x0a;) -->
  <define name="numcharref.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="text"/>
        <ref name="tm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="numcharref.attributes">
    <ref name="univ-atts"/>
    <optional>
      <attribute name="outputclass"/>
    </optional>
  </define>
  <define name="numcharref.element">
    <element name="numcharref">
      <ref name="numcharref.attlist"/>
      <ref name="numcharref.content"/>
    </element>
  </define>
  <define name="numcharref.attlist" combine="interleave">
    <ref name="numcharref.attributes"/>
  </define>
  <!-- LONG NAME: Parameter entity reference (%p.content;) -->
  <define name="parameterentity.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="text"/>
        <ref name="tm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="parameterentity.attributes">
    <ref name="univ-atts"/>
    <optional>
      <attribute name="outputclass"/>
    </optional>
  </define>
  <define name="parameterentity.element">
    <element name="parameterentity">
      <a:documentation>The parameterentity (&lt;parameterentity&gt;) element is used to identify
mentions of XML DTD parameter entities.
        Category: Mention elements</a:documentation>
      <ref name="parameterentity.attlist"/>
      <ref name="parameterentity.content"/>
    </element>
  </define>
  <define name="parameterentity.attlist" combine="interleave">
    <ref name="parameterentity.attributes"/>
  </define>
  <!-- LONG NAME: Text entity (&prodname;) -->
  <define name="textentity.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="text"/>
        <ref name="tm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="textentity.attributes">
    <ref name="univ-atts"/>
    <optional>
      <attribute name="outputclass"/>
    </optional>
  </define>
  <define name="textentity.element">
    <element name="textentity">
      <a:documentation>The textentity (&lt;textentity&gt;) element is used to identify
mentions of XML text entities.
        Category: Mention elements</a:documentation>
      <ref name="textentity.attlist"/>
      <ref name="textentity.content"/>
    </element>
  </define>
  <define name="textentity.attlist" combine="interleave">
    <ref name="textentity.attributes"/>
  </define>
  <!-- LONG NAME: XML attribute -->
  <define name="xmlatt.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="text"/>
        <ref name="tm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="xmlatt.attributes">
    <ref name="univ-atts"/>
    <optional>
      <attribute name="outputclass"/>
    </optional>
  </define>
  <define name="xmlatt.element">
    <element name="xmlatt">
      <a:documentation>The xmlatt (&lt;xmlatt&gt;) element is used to identify
mentions of XML attributes.
        Category: Mention elements</a:documentation>
      <ref name="xmlatt.attlist"/>
      <ref name="xmlatt.content"/>
    </element>
  </define>
  <define name="xmlatt.attlist" combine="interleave">
    <ref name="xmlatt.attributes"/>
  </define>
  <!-- LONG NAME: XML element -->
  <define name="xmlelement.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="text"/>
        <ref name="tm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="xmlelement.attributes">
    <ref name="univ-atts"/>
    <optional>
      <attribute name="outputclass"/>
    </optional>
  </define>
  <define name="xmlelement.element">
    <element name="xmlelement">
      <a:documentation>The xmlelement (&lt;xmlelement&gt;) element is used to identity mentions
of XML element types.
        Category: Mention elements</a:documentation>
      <ref name="xmlelement.attlist"/>
      <ref name="xmlelement.content"/>
    </element>
  </define>
  <define name="xmlelement.attlist" combine="interleave">
    <ref name="xmlelement.attributes"/>
  </define>
  <!-- LONG NAME: XML namespace name (aka "namespace URI") -->
  <define name="xmlnsname.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="text"/>
        <ref name="tm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="xmlnsname.attributes">
    <ref name="univ-atts"/>
    <optional>
      <attribute name="outputclass"/>
    </optional>
  </define>
  <define name="xmlnsname.element">
    <element name="xmlnsname">
      <a:documentation>The xmlnsname (&lt;xmlnsname&gt;) element is used to identify
mentions of XML namespace names, e.g. the value used
in @xmlns attributes.
        Category: Mention elements</a:documentation>
      <ref name="xmlnsname.attlist"/>
      <ref name="xmlnsname.content"/>
    </element>
  </define>
  <define name="xmlnsname.attlist" combine="interleave">
    <ref name="xmlnsname.attributes"/>
  </define>
  <!-- LONG NAME: XML processing instruction (PI) -->
  <define name="xmlpi.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="text"/>
        <ref name="tm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="xmlpi.attributes">
    <ref name="univ-atts"/>
    <optional>
      <attribute name="outputclass"/>
    </optional>
  </define>
  <define name="xmlpi.element">
    <element name="xmlpi">
      <a:documentation>The xmlpi (&lt;xmlpi&gt;) element is used to identify
mentions of XML processing instruction names (e.g., &lt;?piname the PI value?>).
        Category: Mention elements</a:documentation>
      <ref name="xmlpi.attlist"/>
      <ref name="xmlpi.content"/>
    </element>
  </define>
  <define name="xmlpi.attlist" combine="interleave">
    <ref name="xmlpi.attributes"/>
  </define>
  <!-- Specialization attributes. Global attributes and class defaults -->
  <define name="numcharref.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/keyword markup-d/markupname xml-d/numcharref "/>
    </optional>
  </define>
  <define name="parameterentity.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/keyword markup-d/markupname xml-d/parameterentity "/>
    </optional>
  </define>
  <define name="textentity.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/keyword markup-d/markupname xml-d/textentity "/>
    </optional>
  </define>
  <define name="xmlatt.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/keyword markup-d/markupname xml-d/xmlatt "/>
    </optional>
  </define>
  <define name="xmlelement.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/keyword markup-d/markupname xml-d/xmlelement "/>
    </optional>
  </define>
  <define name="xmlnsname.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/keyword markup-d/markupname xml-d/xmlnsname "/>
    </optional>
  </define>
  <define name="xmlpi.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/keyword markup-d/markupname xml-d/xmlpi "/>
    </optional>
  </define>
</grammar>
