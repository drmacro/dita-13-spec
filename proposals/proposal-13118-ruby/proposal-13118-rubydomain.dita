<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="IssueNumber00" xml:lang="en-us">
<title>DITA 1.3 proposed feature #13118 </title>
<shortdesc>Provide a domain that provides the ruby markup from HTML5 as used by
    Japanese and other ideographic languages.</shortdesc>
<refbody>
<section><title>Date and version information</title><p>
        <ul>
          <li>Proposal Completed: 1 Oct 2012</li>
          <li>Change log:<ul
            id="ul_lk1_tjp_xh">
            <li>21 Oct 2012: <ul
              id="ul_kk1_4kp_xh">
              <li>Completed TBD in costs</li>
              <li>Added RNC and XSD declarations</li>
              <li>Removed &lt;rb> element—has been obsoleted in latest HTML5
                draft (October 2012)</li>
              </ul></li>
            </ul></li>
          <li>Champion: Eliot Kimber,</li>
          <li>Email discussion: <xref
            href="https://lists.oasis-open.org/archives/dita/201201/msg00061.html"
            format="html"
            scope="external">https://lists.oasis-open.org/archives/dita/201201/msg00061.html</xref>.</li>
        </ul>
      </p></section>
<section><title>Original requirement</title>
      <p>In Japanese, the pronunciation of ideographic characters cannot always
        (or often) be known from context. The ideographic characters are
        annotated with their phonetic transliteration, a "ruby", which is
        rendered above or beside or following the ideographs. This is standard
        Japanese typography. </p></section>
<section><title>Use cases</title><p>Japanese and other ideographic or similar languages where correct
        pronunciation may require phonetic annotation.</p></section>
<section><title>Benefits</title><p>
        <ul>
          <li>Who benefits: DITA users who create Japanese- and similar
            ideographic language content.</li>
          <li>Expected benefit: Enables correct typographic rendering of ruby
            annotations.</li>
          <li>Potential users: At a minimum, all or most companies that write in
            or localize to Japanese.</li>
          <li>Degree of positive impact: Significant. Makes producing Japanese
            documents with proper ruby annotation possible without the need to
            implement a custom vocabulary module.</li>
        </ul>
      </p></section>
<section><title>Costs</title><p>Costs:<ul>
        <li>Maintainers of the DTDs and XSDs: Adds a new vocabulary module,
          which must be integrated into the appropriate shell document
          types.</li>
        <li>Editors of the DITA specification:<ul>
          <li>How many new topics will be required? 1 new reference topic.</li>
          <li>How many existing topics will need to be edited?<ul
            id="ul_plh_4z1_xh">
            <li>Topic "Domain elements" in the Language Reference will need to
              reflect this domain.</li>
            </ul></li>
          <li>Will the feature require substantial changes to the information
            architecture of the DITA specification? No architectural
            change.</li>
          </ul></li>
        <li>Vendors of tools: Processors that render DITA content visually
          should provide appropriate rendering of ruby content. For HTML-based
          outputs, ruby support is built in to most, if not all, browsers.</li>
        <li>DITA community-at-large. Will this feature add to the perception
          that DITA is becoming too complex? Will it be simple for end users to
          understand?<p>This feature adds a new optional vocabulary module.
          Users who need it will appreciate having it readily available. Users
          who do not need it may safely ignore it. The general architecture and
          semantics of DITA are not affected by this proposal.</p></li>
        </ul></p></section>
<section><title>Technical requirements</title>
      <p>Define a new vocabulary module, rubyDomain, that defines the &lt;ruby>
        element type with the same content as defined in HTML5.<dl>
        <dlentry>
          <dt>ruby</dt>
          <dd>Contains the subelements  &lt;rp> and &lt;rt>. See the HTML5
            definition of the &lt;ruby> element.</dd>
        </dlentry>
        </dl></p>
      <fig>
        <title>DTD Syntax domain module declarations</title>
        <p>rubyDomain.ent:</p>
        <codeblock>&lt;?xml version="1.0" encoding="utf-8"?>
&lt;!-- =============================================================
     DITA Ruby Domain
     
     Defines equivalent of HTML ruby elements for marking up
     Japanese language documents.
     
     Copyright (c) 2012 OASIS Open
     
     ============================================================= -->


&lt;!-- ============================================================= -->
&lt;!--                   Ruby DOMAIN ENTITIES                  -->
&lt;!-- ============================================================= -->

&lt;!ENTITY % ruby-d-ph
   " ruby
   "
>



&lt;!ENTITY   ruby-d-att     
  "(topic ruby-d)"
>


&lt;!-- ================== End DITA For Publishers Ruby Domain Entities ============ --></codeblock>
        <p>rubyDomain.mod:<codeblock>&lt;?xml version="1.0" encoding="utf-8"?>
&lt;!-- =============================================================
     DITA Ruby Domain
     
     Defines equivalent of HTML ruby elements for marking up
     Japanese language documents.
     
     Copyright (c) 2012 OASIS Open
     
     ============================================================= -->
     
 &lt;!ENTITY % ruby           "ruby" >

 &lt;!ENTITY % rp             "rp" >
 &lt;!ENTITY % rt             "rt" >


&lt;!-- ============================================================= -->
&lt;!--                   ELEMENT NAME ENTITIES                       -->
&lt;!-- ============================================================= -->


&lt;!-- ============================================================= -->
&lt;!--                    ELEMENT DECLARATIONS                       -->
&lt;!-- ============================================================= -->


&lt;!-- In order to support HTML5, which allows a mix of PCDATA, other phrase-
     level elements, and &lt;rt> and &lt;rp>, the content model must allow
     %ph;, which means that the DTD allows &lt;ruby> within &lt;ruby>. However,
     &lt;ruby> should *not* be used within &lt;ruby>, per the HTML 
     constraints on &lt;ruby>. Likewise, if &lt;rp> is used, it should be
     used as &lt;rp>(&lt;/rp>&lt;rt>...&lt;/rt>&lt;rp>)&lt;/rp> per the HTML5 spec.
  -->
&lt;!ENTITY % ruby.content
"
  (%ph.cnt; |
   %rp; |
   %rt;)*
  " 
>
&lt;!ENTITY % ruby.attributes
 "
   %id-atts;
  %localization-atts;
  base       
    CDATA                            
    #IMPLIED
  %base-attribute-extensions;
  outputclass 
    CDATA                            
    'ruby'    
 "
> 
&lt;!ELEMENT ruby %ruby.content; >
&lt;!ATTLIST ruby %ruby.attributes; >


&lt;!ENTITY % rp.content
"
  (#PCDATA
  )*
  " 
>
&lt;!ENTITY % rp.attributes
 "
   %id-atts;
  %localization-atts;
  base       
    CDATA                            
    #IMPLIED
  %base-attribute-extensions;
  outputclass 
    CDATA                            
    'rp'    
 "
> 
&lt;!ELEMENT rp %rp.content; >
&lt;!ATTLIST rp %rp.attributes; >

&lt;!ENTITY % rt.content
"
  (#PCDATA
  )*
  " 
>
&lt;!ENTITY % rt.attributes
 "
   %id-atts;
  %localization-atts;
  base       
    CDATA                            
    #IMPLIED
  %base-attribute-extensions;
  outputclass 
    CDATA                            
    'rt'    
 "
> 
&lt;!ELEMENT rt %rt.content; >
&lt;!ATTLIST rt %rt.attributes; >



&lt;!-- ============================================================= -->
&lt;!--                    SPECIALIZATION ATTRIBUTE DECLARATIONS      -->
&lt;!-- ============================================================= -->

&lt;!ATTLIST ruby              %global-atts;  class CDATA "+ topic/ph    ruby-d/ruby ">
&lt;!ATTLIST rp                %global-atts;  class CDATA "+ topic/ph    ruby-d/rp ">
&lt;!ATTLIST rt                %global-atts;  class CDATA "+ topic/ph    ruby-d/rt ">


&lt;!-- ================== End Ruby Domain ==================== --></codeblock></p>
      </fig>
      <fig>
        <title>XSD domain module declarations</title>
        <p>rubyDomainMod.xsd:<codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified">
  
  &lt;!-- DITA 1.3 XML Domain -->
  
    &lt;xs:annotation>
      &lt;xs:appinfo>
        &lt;dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic ruby-d)&lt;/dita:domainsModule>
      &lt;/xs:appinfo>
      &lt;xs:documentation>
      
      &lt;/xs:documentation>
    &lt;/xs:annotation>


  &lt;xs:group name="ruby-d-ph">
    &lt;xs:choice>
      &lt;xs:element ref="ruby"/>
    &lt;/xs:choice>
  &lt;/xs:group>
  

  &lt;xs:group name="ruby.content">
    &lt;xs:sequence>
      &lt;xs:choice minOccurs="0" maxOccurs="unbounded">
        &lt;xs:group ref="ph.content"/>
        &lt;xs:element ref="rp"/>
        &lt;xs:element ref="rt"/>
      &lt;/xs:choice>
    &lt;/xs:sequence>
  &lt;/xs:group>

  &lt;!-- Basic form: ruby -->
  &lt;xs:element name="ruby">
    &lt;xs:annotation>
      &lt;xs:documentation>
       
      &lt;/xs:documentation>
    &lt;/xs:annotation>
    &lt;xs:complexType mixed="true">
      &lt;xs:complexContent>
        &lt;xs:extension base="ruby.class">
          &lt;xs:attribute ref="class" default="+ topic/ph ruby-d/ruby "/>
        &lt;/xs:extension>
      &lt;/xs:complexContent>
    &lt;/xs:complexType>
  &lt;/xs:element>
  &lt;xs:complexType name="ruby.class" mixed="true">
        &lt;xs:sequence>
          &lt;xs:group ref="ruby.content"/>
        &lt;/xs:sequence>
    &lt;xs:attributeGroup ref="ruby.attributes"/>
  &lt;/xs:complexType>
  
  &lt;xs:attributeGroup name="ruby.attributes">
    &lt;xs:attributeGroup ref="global-atts"/>
    &lt;xs:attributeGroup ref="univ-atts"/>
    &lt;xs:attribute name="outputclass" type="xs:string"/>
  &lt;/xs:attributeGroup>


  &lt;xs:element name="rp">
    &lt;xs:annotation>
      &lt;xs:documentation>
        &lt;p>Ruby parenthesis&lt;/p>
      &lt;/xs:documentation>
    &lt;/xs:annotation>
    &lt;xs:complexType mixed="true">
      &lt;xs:complexContent>
        &lt;xs:extension base="rp.class">
          &lt;xs:attribute ref="class" default="+ topic/ph ruby-d/rp "/>
        &lt;/xs:extension>
      &lt;/xs:complexContent>
    &lt;/xs:complexType>
  &lt;/xs:element>
  &lt;xs:complexType name="rp.class" mixed="true">
    &lt;xs:attributeGroup ref="rp.attributes"/>
  &lt;/xs:complexType>
  
  &lt;xs:attributeGroup name="rp.attributes">
    &lt;xs:attributeGroup ref="global-atts"/>
    &lt;xs:attributeGroup ref="univ-atts"/>
    &lt;xs:attribute name="outputclass" type="xs:string"/>
  &lt;/xs:attributeGroup>
  
  &lt;xs:element name="rt">
    &lt;xs:annotation>
      &lt;xs:documentation>
        &lt;p>Ruby text&lt;/p>
      &lt;/xs:documentation>
    &lt;/xs:annotation>
    &lt;xs:complexType mixed="true">
      &lt;xs:complexContent>
        &lt;xs:extension base="rt.class">
          &lt;xs:attribute ref="class" default="+ topic/ph ruby-d/rt "/>
        &lt;/xs:extension>
      &lt;/xs:complexContent>
    &lt;/xs:complexType>
  &lt;/xs:element>
  &lt;xs:complexType name="rt.class" mixed="true">
    &lt;xs:attributeGroup ref="rt.attributes"/>
  &lt;/xs:complexType>
  
  &lt;xs:attributeGroup name="rt.attributes">
    &lt;xs:attributeGroup ref="global-atts"/>
    &lt;xs:attributeGroup ref="univ-atts"/>
    &lt;xs:attribute name="outputclass" type="xs:string"/>
  &lt;/xs:attributeGroup>
  
  
  
&lt;/xs:schema></codeblock></p>
      </fig>
      <fig>
        <title>RelaxNG Compact domain module declarations</title>
        <note>These declarations are not complete. Waiting to work out details
          of how to declare equivalent of &lt;xs:any> in RNC syntax.</note>
        <p>rubyDomainMod.rnc:<codeblock>datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

# ============================================================= 
# MODULE:    DITA Ruby Domain - RNC              
# VERSION:   1.3                                                
# DATE:      October 2012                                       
# =============================================================


namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

# Define the domain values of this module
domains-atts-value |= "(topic ruby-d)"
# Define domain extension patterns
ruby-d-ph =
   ruby.element
   
# Extend the patterns with the domain contribution
ph |= ruby-d-ph
# Define elements content and attributes

ruby = ruby.element
rp = rp.element
rt = rt.element

# LONG NAME: Ruby annotation
ruby.content =
  (text | 
   rp |
   rt)*
ruby.attributes =
  univ-atts,
  attribute outputclass { text }?
ruby.element =
  
  element ruby { 
    ruby.attlist, 
    ruby.content 
   }
ruby.attlist &amp;= ruby.attributes

# LONG NAME: Ruby parenthesis
rp.content =
  (text)*
rp.attributes =
  univ-atts,
  attribute outputclass { text }?
rp.element =
  
  element rp { 
    rp.attlist, 
    rp.content 
   }
rp.attlist &amp;= rp.attributes

# LONG NAME: Ruby text
rt.content =
  (text)*
rt.attributes =
  univ-atts,
  attribute outputclass { text }?
rt.element =
  
  element rt { 
    rt.attlist, 
    rt.content 
   }
rt.attlist &amp;= rt.attributes



# Specialization attributes. Global attributes and class defaults
ruby.attlist &amp;=
  global-atts,
  [ a:defaultValue = "+ topic/ph ruby-d/ruby " ] attribute class { text }?
rp.attlist &amp;=
  global-atts,
  [ a:defaultValue = "+ topic/ph ruby-d/rp " ] attribute class { text }?
rt.attlist &amp;=
  global-atts,
  [ a:defaultValue = "+ topic/ph ruby-d/rt " ] attribute class { text }?
</codeblock></p>
      </fig></section>
<section><title>Examples</title>
      <fig>
        <title>Sample topic with ruby markup.</title>
        <codeblock>&lt;topic id="ruby-test-topic-01">
  &lt;title>Ruby Domain Test&lt;/title>
  &lt;body>
    &lt;p> 探険船シビリアコフ号の北氷洋航海中に撮影されたエピソード映画の中に、一頭の&lt;ruby>
      白熊
      &lt;rp>（&lt;/rp>
      &lt;rt>しろくま&lt;/rt>
      &lt;rp>）&lt;/rp>
    &lt;/ruby>を射殺し、その子を生け捕る光景が記録されている。&lt;/p>    
  &lt;/body>
&lt;/topic></codeblock>
      </fig>
      <fig>
        <title>Ruby as rendered in HTML by Safari browser</title>
        <p><image
          href="ruby-html-rendition.png"
          id="image_q4l_p1f_th">
          <alt>Screen capture of the sample rendered to HTML with HTML ruby
            markup. The sample shows a small phonetic annotation above two kanji
            characters.</alt>
          </image></p>
      </fig></section>
</refbody>
</reference><?Pub Caret -3?>
<?Pub *0000003625?>
