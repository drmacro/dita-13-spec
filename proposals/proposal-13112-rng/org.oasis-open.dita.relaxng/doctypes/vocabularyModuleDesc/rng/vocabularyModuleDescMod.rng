<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:vocabularyModuleDesc.rng" 
  schematypens="http://relaxng.org/ns/structure/1.0"?>
<grammar 
  xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" 
  xmlns="http://relaxng.org/ns/structure/1.0" 
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
  >
 <moduleDesc xmlns="http://dita.oasis-open.org/architecture/2005/">
   <moduleTitle>DITA Module Description Module</moduleTitle>
   <headerComment><![CDATA[
============================================================= 
                    HEADER                                     
 ============================================================= 
  MODULE:    DITA Module Description                             
  VERSION:   1.3                                               
  DATE:      September 2013                                     
                                                               
 ============================================================= 

 ============================================================= 
 SYSTEM:     Darwin Information Typing Architecture (DITA)     
                                                               
 PURPOSE:    Defines markup that must occur at the start of a
             DITA RelaxNG XML-syntax vocabulary module,
             constraint module, or document type shell. Provides
             both documentation and essentially metadata required
             by processes that generate versions of the module
             or shell in other schema syntaxes (DTD, XSD, etc.)
             
             Note that this schema does define a DITA topic type,
             however, it is in a namespace, which is not 
             strictly conforming per the DITA 1.x spec (DITA
             has no way to handle specialized elements that are
             in a namespace because of limitations in the @class
             value syntax). RelaxNG requires that foreign
             elements be in a namespace.
             
             However, as long as the tags used for the header
             markup do not have a prefix, the header can 
             be processed as a non-namespaced document by simply
             omitting the default namespace declaration on 
             the root <moduleDesc> element.
             
             RNG documents can refer to this schema using this
             processing instruction:
             
                                                               
 ORIGINAL CREATION DATE:                                       
             September, 2013                                        
                                                               
             (C) Copyright OASIS Open 2013              
             All Rights Reserved.                              
                                                               
 =============================================================      
 ]]></headerComment>
   <moduleMetadata>
     <moduleType>topic</moduleType>
     <moduleShortName>vocabularyModule</moduleShortName>
     <modulePublicIds>
       <dtdMod>-//OASIS//ELEMENTS DITA Vocabulary Module Description//EN</dtdMod>
       <dtdEnt>-//OASIS//ENTITIES DITA Vocabulary Module Description//EN</dtdEnt>
       <xsdMod>urn:oasis:names:tc:dita:xsd:vocabularyModuleDescMod.xsd</xsdMod>
       <rncMod>urn:oasis:names:tc:dita:rnc:vocabularyModuleDescMod.rnc</rncMod>
       <rngMod>urn:oasis:names:tc:dita:rng:vocabularyModuleDescMod.rng</rngMod>
     </modulePublicIds>
     <domainsContribution>(topic moduleDesc)</domainsContribution>
   </moduleMetadata>
 </moduleDesc>
  
  <define name="moduleDesc-info-types">
    <empty/>
  </define>

  <define name="moduleDesc">
    <ref name="moduleDesc.element"/>
  </define>
  <define name="moduleTitle">
    <ref name="moduleTitle.element"/>
  </define>
  <define name="headerComment">
    <ref name="headerComment.element"/>
  </define>
  <define name="moduleMetadata">
    <ref name="moduleMetadata.element"/>
  </define>
  <define name="moduleShortName">
    <ref name="moduleShortName.element"/>
  </define>
  <define name="domainsContribution">
    <ref name="domainsContribution.element"/>
  </define>
  <define name="modulePublicIds">
    <ref name="modulePublicIds.element"/>
  </define>
  <define name="moduleType">
    <ref name="moduleType.element"/>
  </define>
  <define name="shellPublicIds">
    <ref name="shellPublicIds.element"/>
  </define>
  <define name="dtdMod">
    <ref name="dtdMod.element"/>
  </define>
  <define name="dtdEnt">
    <ref name="dtdEnt.element"/>
  </define>
  <define name="dtdShell">
    <ref name="dtdShell.element"/>
  </define>
  <define name="rncMod">
    <ref name="rncMod.element"/>
  </define>
  <define name="rncShell">
    <ref name="rncShell.element"/>
  </define>
  <define name="rngMod">
    <ref name="rngMod.element"/>
  </define>
  <define name="rngShell">
    <ref name="rngShell.element"/>
  </define>
  <define name="xsdMod">
    <ref name="xsdMod.element"/>
  </define>
  <define name="xsdGrp">
    <ref name="xsdGrp.element"/>
  </define>
  <define name="xsdShell">
    <ref name="xsdShell.element"/>
  </define>

  <define name="moduleDesc.content">
    <group>      
      <ref name="moduleTitle"/>
      <ref name="headerComment"/>
      <ref name="moduleMetadata"/>
    </group>    
  </define>
  <define name="moduleDesc.attributes">
    <empty/>
  </define>
  <define name="moduleDesc.element">
    <a:documentation>Describes a DITA vocabulary or constraint module or a DITA document type shell</a:documentation>
    <element name="dita:moduleDesc" dita:longName="Module Description">
      <ref name="moduleDesc.content"/>
      <ref name="moduleDesc.attributes"/>
    </element>
  </define>
  <define name="moduleDesc.attlist" combine="interleave">
    <ref name="moduleDesc.attributes"/>
    <ref name="arch-atts"/>
    <optional>
      <attribute name="domains" a:defaultValue="(topic moduleDesc)"/>
    </optional>
  </define>

  <define name="moduleTitle.content">
    <text/>
  </define>
  <define name="moduleTitle.attributes">
    <empty/>
  </define>
  <define name="moduleTitle.element">
    <a:documentation>The descriptive title of the module</a:documentation>
    <element name="dita:moduleTitle" dita:longName="Module Title">
      <ref name="moduleTitle.content"/>
      <ref name="moduleTitle.attributes"/>
    </element>
  </define>
 
  <define name="headerComment.content">
    <text/>
  </define>
  <define name="headerComment.attributes">
    <optional>
      <attribute name="xml:space" a:defaultValue="preserve"/>
    </optional>
  </define>
  <define name="headerComment.element">
    <a:documentation>Holds the header comment for the module. 
      Spaces and newlines are preserved.</a:documentation>
    <element name="dita:headerComment" dita:longName="Header Comment">
      <ref name="headerComment.content"/>
      <ref name="headerComment.attributes"/>
    </element>
  </define>

  <define name="moduleMetadata.content">
    <group>
      <ref name="moduleType"/>
      <ref name="moduleShortName"/>
      <choice> 
        <group>
          <ref name="modulePublicIds"/>
          <ref name="domainsContribution"/>
        </group>
        <ref name="shellPublicIds"/>
      </choice>
    </group>
  </define>
  <define name="moduleMetadata.attributes">
    <empty/>
  </define>
  <define name="moduleMetadata.element">
    <a:documentation>Holds metadata for the module. 
    This metadata is used primarily to support the needs
    of transforms that generate other syntax versions
    of the schema, including DTD-syntax modules, XSD-syntax modules,
    and RelaxNG compact syntax modules.</a:documentation>
    <element name="dita:moduleMetadata" dita:longName="Module Metadata">
      <ref name="moduleMetadata.content"/>
      <ref name="moduleMetadata.attributes"/>
    </element>
  </define>

  <define name="moduleType.content">
    <choice>
      <value>attributedomain</value>
      <value>base</value>
      <value>constraint</value>
      <value>elementdomain</value>
      <value>map</value><!-- Map type module -->
      <value>mapshell</value><!-- Topic document type shell -->
      <value>topic</value><!-- Topic type module -->
      <value>topicshell</value><!-- Topic document type shell -->
    </choice>
  </define>
  <define name="moduleType.attributes">    
    <optional>
      <attribute name="name" a:defaultValue="moduleType"/>
    </optional>
  </define>
  <define name="moduleType.element">
    <a:documentation>Indicates the type of the module. The types are:
attributeDomain - An attribute domain module (e.g., deliveryTargetAttDomain)

base - Part of the base DITA vocabulary definition. These modules are
       special cases. Only OASIS-defined modules may be of type base,
       e.g. commonElements, metaDecl.
       
constraint - A constraint module (e.g., strictTaskbodyConstraint)

elementDomain - An element domain module (e.g., highlightDomain)

map - A map-type module (e.g., basemap, bookmapMod)

shell - A document type shell (e.g., concept, basemap, map)

topic - A topic-type module (e.g., topicMod, conceptMod)
    </a:documentation>
    <element name="dita:moduleType" dita:longName="Module type indicator">
      <ref name="moduleType.content"/>
      <ref name="moduleType.attributes"/>
    </element>
  </define>

  <define name="moduleShortName.content">
    <text/>
  </define>
  <define name="moduleShortName.attributes">    
    <optional>
      <attribute name="name" a:defaultValue="moduleShortName"/>
    </optional>
  </define>
  <define name="moduleShortName.element">
    <a:documentation>Indicates the type of the module. The types are:
attributeDomain - An attribute domain module (e.g., deliveryTargetAttDomain)

base - Part of the base DITA vocabulary definition. These modules are
       special cases. Only OASIS-defined modules may be of type base,
       e.g. commonElements, metaDecl.
       
constraint - A constraint module (e.g., strictTaskbodyConstraint)

elementDomain - An element domain module (e.g., highlightDomain)

map - A map-type module (e.g., basemap, bookmapMod)

shell - A document type shell (e.g., concept, basemap, map)

topic - A topic-type module (e.g., topicMod, conceptMod)
    </a:documentation>
    <element name="dita:moduleShortName" dita:longName="Module Short Name">
      <ref name="moduleShortName.content"/>
      <ref name="moduleShortName.attributes"/>
    </element>
  </define>

  <define name="modulePublicIds.content">
    <interleave>
      <ref name="dtdMod"/>
      <optional>
        <a:documentation>As attribute domains and constraint
          modules do not have .ent
        files, dtdEnt can be omitted for those module types. It must be specified
        for other module types and for document type shells.</a:documentation>
        <ref name="dtdEnt"/>
      </optional>
      <ref name="rncMod"/>
      <ref name="rngMod"/>
      <ref name="xsdMod"/>
    </interleave>
  </define>
  <define name="modulePublicIds.attributes">
    <empty/>
  </define>
  <define name="modulePublicIds.element">
    <a:documentation>Defines the public IDs to be associated
    with each different syntax form of the module. These
    values serve as documentation for how the module
    should be referenced and also enables generation of 
    references to the modules from document type shells.
    
    The elements may occur in any order.
    </a:documentation>
    <element name="dita:modulePublicIds" dita:longName="Module and Shell Public IDs">
      <ref name="modulePublicIds.content"/>
      <ref name="modulePublicIds.attributes"/>
    </element>
  </define>

  <define name="shellPublicIds.content">
    <interleave>
      <ref name="dtdShell"/>
      <ref name="rncShell"/>
      <ref name="rngShell"/>
      <ref name="xsdShell"/>
    </interleave>
  </define>
  <define name="shellPublicIds.attributes">
    <empty/>
  </define>
  <define name="shellPublicIds.element">
    <a:documentation>Defines the public IDs to be associated
    with each different syntax form of a document type shell. These
    values serve as documentation for how the shell
    should be referenced and also enable generation of references
    to the modules from document type shells or other modules.
    
    The elements may occur in any order.
    </a:documentation>
    <element name="dita:shellPublicIds" dita:longName="Shell Public IDs">
      <ref name="shellPublicIds.content"/>
      <ref name="shellPublicIds.attributes"/>
    </element>
  </define>

  <define name="domainsContribution.content">
    <text/>
  </define>
  <define name="domainsContribution.attributes">
    <empty/>
  </define>
  <define name="domainsContribution.element">
    <a:documentation>The module's contribution to the @domains attribute</a:documentation>
    <element name="dita:domainsContribution" 
      dita:longName="Domains attribute contribution">
      <ref name="domainsContribution.content"/>
      <ref name="domainsContribution.attributes"/>
    </element>
  </define>

  <define name="dtdMod.content">
    <text/>
  </define>
  <define name="dtdMod.attributes">
    <empty/>
  </define>
  <define name="dtdMod.element">
    <a:documentation>Defines the public identifier to use for the 
      DTD .mod file for this module.</a:documentation>
    <element name="dita:dtdMod" dita:longName="DTD module file public ID">
      <ref name="dtdMod.content"/>
      <ref name="dtdMod.attributes"/>
    </element>
  </define>

  <define name="dtdEnt.content">
    <text/>
  </define>
  <define name="dtdEnt.attributes">
    <empty/>
  </define>
  <define name="dtdEnt.element">
    <a:documentation>Defines the public identifier to use for the 
      DTD .ent file for this module.</a:documentation>
    <element name="dita:dtdEnt" dita:longName="DTD entity file public ID">
      <ref name="dtdEnt.content"/>
      <ref name="dtdEnt.attributes"/>
    </element>
  </define>

  <define name="dtdShell.content">
    <text/>
  </define>
  <define name="dtdShell.attributes">
    <empty/>
  </define>
  <define name="dtdShell.element">
    <a:documentation>Defines the public identifier to use for the 
      DTD shell file.</a:documentation>
    <element name="dita:dtdShell" dita:longName="DTD shell public ID">
      <ref name="dtdShell.content"/>
      <ref name="dtdShell.attributes"/>
    </element>
  </define>

  <define name="rncMod.content">
    <text/>
  </define>
  <define name="rncMod.attributes">
    <empty/>
  </define>
  <define name="rncMod.element">
    <a:documentation>Defines the public identifier to use for the 
      DTD .mod file for this module.</a:documentation>
    <element name="dita:rncMod" dita:longName="RNC module public ID">
      <ref name="rncMod.content"/>
      <ref name="rncMod.attributes"/>
    </element>
  </define>
  
  <define name="rncShell.content">
    <text/>
  </define>
  <define name="rncShell.attributes">
    <empty/>
  </define>
  <define name="rncShell.element">
    <a:documentation>Defines the public identifier to use for the 
      RNC shell file.</a:documentation>
    <element name="dita:rncShell" dita:longName="RNC shell public ID">
      <ref name="rncShell.content"/>
      <ref name="rncShell.attributes"/>
    </element>
  </define>

  <define name="rngMod.content">
    <text/>
  </define>
  <define name="rngMod.attributes">
    <empty/>
  </define>
  <define name="rngMod.element">
    <a:documentation>Defines the public identifier to use for the 
      DTD .mod file for this module.</a:documentation>
    <element name="dita:rngMod" dita:longName="RNG module public ID">
      <ref name="rngMod.content"/>
      <ref name="rngMod.attributes"/>
    </element>
  </define>

  <define name="rngShell.content">
    <text/>
  </define>
  <define name="rngShell.attributes">
    <empty/>
  </define>
  <define name="rngShell.element">
    <a:documentation>Defines the public identifier to use for the 
      RNG shell file.</a:documentation>
    <element name="dita:rngShell" dita:longName="RNG shell public ID">
      <ref name="rngShell.content"/>
      <ref name="rngShell.attributes"/>
    </element>
  </define>

  <define name="xsdMod.content">
    <text/>
  </define>
  <define name="xsdMod.attributes">
    <empty/>
  </define>
  
  <define name="xsdMod.element">
    <a:documentation>Defines the public identifier to use for the 
      XSD module (.mod) file for this module.</a:documentation>
    <element name="dita:xsdMod" dita:longName="XSD module public ID">
      <ref name="xsdMod.content"/>
      <ref name="xsdMod.attributes"/>
    </element>
  </define>
  
  <define name="xsdGrp.content">
    <text/>
  </define>
  <define name="xsdGrp.attributes">
    <empty/>
  </define>
  <define name="xsdGrp.element">
    <a:documentation>Defines the public identifier to use for the 
      XSD group (.grp) file for this module.</a:documentation>
    <element name="dita:xsdGrp" dita:longName="XSD group public ID">
      <ref name="xsdGrp.content"/>
      <ref name="xsdGrp.attributes"/>
    </element>
  </define>
  
  <define name="xsdShell.content">
    <text/>
  </define>
  <define name="xsdShell.attributes">
    <empty/>
  </define>
  <define name="xsdShell.element">
    <a:documentation>Defines the public identifier to use for the XSD shell file.</a:documentation>
    <element name="dita:xsdShell" dita:longName="XSD shell public ID">
      <ref name="xsdShell.content"/>
      <ref name="xsdShell.attributes"/>
    </element>
  </define>

    <!-- Specialization attributes. Global attributes and class defaults -->

  <define name="moduleDesc.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/topic moduleDesc/moduleDesc "/>
    </optional>
  </define>
  <define name="moduleTitle.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/title moduleDesc/moduleTitle "/>
    </optional>
  </define>
  <define name="headerComment.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/shortdesc moduleDesc/headerComment "/>
    </optional>
  </define>
  <define name="moduleMetadata.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/prolog moduleDesc/moduleMetadata "/>
    </optional>
  </define>
  <define name="moduleType.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/moduleType "/>
    </optional>
  </define>
  <define name="moduleShortName.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/moduleShortName "/>
    </optional>
  </define>
  <define name="modulePublicIds.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/modulePublicIds "/>
    </optional>
  </define>
  <define name="shellPublicIds.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/shellPublicIds "/>
    </optional>
  </define>
  <define name="domainsContribution.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/domainsContribution "/>
    </optional>
  </define>
  <define name="dtdMod.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/dtdMod "/>
    </optional>
  </define>
  <define name="dtdEnt.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/dtdEnt "/>
    </optional>
  </define>
  <define name="dtdShell.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/dtdShell "/>
    </optional>
  </define>
  <define name="rncMod.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/rncMod "/>
    </optional>
  </define>
  <define name="rncShell.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/rncShell "/>
    </optional>
  </define>
  <define name="rngMod.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/rngMod "/>
    </optional>
  </define>
  <define name="rngShell.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/rngShell "/>
    </optional>
  </define>
  <define name="xsdMod.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/xsdMod "/>
    </optional>
  </define>
  <define name="xsdGrp.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/xsdGrp "/>
    </optional>
  </define>
  <define name="xsdShell.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="- topic/data moduleDesc/xsdShell "/>
    </optional>
  </define>

</grammar>