<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<dita>
  <topic id="topic_aqh_5zt_3h">
    <title>Stage 3 proposal: Feature 13041 Cross-Deliverable Linking</title>
    <shortdesc>Defines the meaning and addressing implications for peer-scope
      map references that specify a key scope for the map reference: keys
      defined in peer maps that are bound to a key scope in the referencing map
      may be addressed as scope-qualified keys.</shortdesc>
    <body>
      <section>
        <title>Champion</title>
        <p>Eliot Kimber</p>
      </section>
      <section>
        <title>Tracking information</title>
        <simpletable frame="all" relcolwidth="1.0* 1.0* 1.0*">
          <sthead>
            <stentry>Event</stentry>
            <stentry>Date</stentry>
            <stentry>Links</stentry>
          </sthead>
          <strow>
            <stentry>Stage 1 proposal accepted</stentry>
            <stentry/>
            <stentry>Include link to meeting minutes</stentry>
          </strow>
          <strow>
            <stentry>Stage 2 proposal submitted</stentry>
            <stentry/>
            <stentry>Include links to DITA and HTML versions</stentry>
          </strow>
          <strow>
            <stentry>Stage 2 proposal discussed</stentry>
            <stentry/>
            <stentry>Include link to meeting minutes</stentry>
          </strow>
          <strow>
            <stentry>Stage 2 proposal approved</stentry>
            <stentry>28 May 2013</stentry>
            <stentry>Include link to meeting minutes</stentry>
          </strow>
          <strow>
            <stentry>Stage 3 proposal submitted to reviewers</stentry>
            <stentry>23 June 2013</stentry>
            <stentry>Chris Nitchie, Jim Tivy</stentry>
          </strow>
          <strow>
            <stentry>Stage 3 proposal (this document) submitted</stentry>
            <stentry>17 November 2013</stentry>
            <stentry/>
          </strow>
        </simpletable>
      </section>
      <section>
        <title>Approved technical requirements</title>
        <p>Define the meaning of @scope of "peer" on key-defining topicrefs to
          DITA map documents where the key definition also specifies a key scope
          such that the referenced map is treated as a separate key space bound
          to the scope specified, such that references to keys in that scope are
          taken to be references to keys in the target map's key space. The
          target map's key space is treated as a separate key space and is not
          merged with the key space of the referencing map.</p>
      </section>
      <section>
        <title>Dependencies or interrelated proposals</title>
        <p>This proposal depends on scoped keys, as defined in proposal 13004.
          Implementation of this facility for the production of deliverables
          with working cross-deliverable links can be done using the vocabulary
          and abstract processing defined in proposal 13120,  Vocabulary for
          Publishing Process Definitions.</p>
      </section>
      <section>
        <title>Modified DTDs</title>
        <p>No changes to existing declarations.</p>
      </section>
      <section>
        <title>Modified specification documentation</title>
        <table
          frame="all"
          id="table_h3j_f4m_pk">
          <title>New and Modified Topics</title>
          <tgroup
            cols="3">
            <colspec
              colname="c1"
              colnum="1"
              colwidth="1.0*"/>
            <colspec
              colname="c2"
              colnum="2"
              colwidth="1.0*"/>
            <colspec
              colname="c3"
              colnum="3"
              colwidth="1.0*"/>
            <thead>
              <row>
                <entry>Topic file</entry>
                <entry>DITA 1.2 Text</entry>
                <entry>DITA 1.3 Text</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>common/thetypeattribute.dita</entry>
                <entry>scope is not local</entry>
                <entry>scope is external:<p>During output processing for
                  references to non-DITA objects (i.e., either scope is not
                  “local” or format is neither “dita” nor “ditamap”)</p></entry>
              </row>
              <row>
                <entry>archSpec/map-to-map-linking.dita</entry>
                <entry/>
                <entry>New topic: <xref
                  href="#map-to-map-linking"
                  format="dita"/>. This topic should be inserted in the <filepath>ditalinkingandaddressing.ditamap</filepath> following the "Links within maps" topic.</entry>
              </row>
              <row>
                <entry>archSpec/processing_key_references.dita</entry>
                <entry/>
                <entry>Insert new paragraph before the paragraph that begins "For topic references...":<p>For references to keys in peer root maps, if the peer map is unavailable for processing or the
                  peer key reference cannot otherwise be resolved, the key reference processed as though there was no key reference. If the peer map is available, then the key reference is processed
                  normally.</p></entry>
              </row>
              <row>
                <entry>langref/thescopeattribute.dita</entry>
                <entry>Set scope to peer when the resource is part of the
                  current set of content but is not accessible at build
                  time.</entry>
                <entry>Set scope to peer when the resource is part of the current set of content but is not accessible at build time or for maps to be treated as root maps for the purpose of creating
                  map-to-map key references (peer maps).</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </section>
    </body>
    <concept
      id="map-to-map-linking">
      <title>Links between maps</title>
      <conbody>
        <p>When using scoped keys, one map may refer to keys defined in a different root map (key space), creating peer map-to-map links (see
          <!--<xref
          keyref="key-based-addressing">-->Key-based addressing<!--</xref>-->). These map-to-map links enable the production of deliverables with working links to other
          deliverables (cross-deliverable links).</p>
        <p>When a key scope is defined on a topic reference to a DITA map (@format of "ditamap") whose @scope value is "peer", then the referenced map is taken to be a <term>peer map</term> with
          respect to the map making the reference. The implication of a scope of "peer" in this case is that the target map is managed along with the referencing map such that the author or processor
          of the first map likely has access to the referenced map as well. </p>
        <p>Keys defined by the <term>peer map</term> belong to the key scope declared on the topicref element that references that map. Such keys can be referenced from content in the referencing map
          using the standard scope-qualified key names used for any other key scope (that is, one of the scope names, followed by a period, followed by the key name). However, references to keys
          defined in peer maps are processed differently from references to keys defined in the local map structure.</p>
        <note
          type="note">Example: Given the map documents <!--          <note
          type="other"
          othertype="Example">Given the map documents
--> <filepath>map-a.dita</filepath> and
          <filepath>map-b.dita</filepath>, Map A can treat Map B as a peer root map using the key
          definition:<codeblock>&lt;map>&lt;title>Map A&lt;/title>
  &lt;topicref 
    scope="peer"
    format="ditamap"
    keyscope="map-b"
    href="../map-b/map-b.ditamap"
    processing-role="resource-only"
  />
  ...
&lt;/map></codeblock><p>In
          this example, the map document <filepath>map-b.ditamap</filepath> is not a submap of Map A, it is a peer map. </p></note>
        <p>Conforming DITA processors are not required to support the resolution of or delivery of key references to peer maps. Note, however, that the general implication of peer scope is that the
          peer resources are all available in the same processing or management context. This means that processors always have the potential to resolve peer key references when the peer resources are
          in fact managed together. There may, of course, be performance, scale, and user interface challenges in implementing such systems, but the fundamental ability to resolve any given reference
          is ensured when the source files are physically accessible. That is, given a correctly-specified reference to a peer map, if the map itself is accessible it must then be possible to process
          that map in order to resolve keys defined by it, if it is also possible to resolve keys in the map making the peer map reference.</p>
        <p>Note also the inverse implication: if the peer resource is not
          available then it is necessarily impossible to resolve the key
          reference. For that reason, processors must be prepared to provide
          appropriate messages or other indicators when a peer resource cannot
          be resolved for a particular processing purpose. Depending on how a
          given set of DITA resources is authored, managed, and processed, peer
          resources may be resolvable or not at different points in the
          content's life cycle.</p>
        <p>The referenced peer map may specify @keyscope on its root element. In
          that case, the @keyscope on the peer map is ignored for the purpose of
          resolving scoped key references from the referencing map. This avoids
          the need for processors to have access to or examine the peer map
          before being able to determine that a given key reference is or is not
          in a peer scope.<!--<note
          type="other"
          othertype="Example">--><note
          type="note">Example: Given this map reference in map Map A:<codeblock>&lt;mapref 
  keyscope="scope-b"
  scope="peer"  
  href="map-b.ditamap"
/> </codeblock><p>Where "map-b.ditamap"
          is:<codeblock>&lt;map keyscope="scopeB">
 ...
&lt;/map></codeblock></p><p>For references from the context of Map A, key references of the form "scope-b.somekey" will be resolved to keys
          defined in the global scope of map B, but key referenes of the form "scopeB.somekey" will not. The presence or absence of a @keyscope attribute on Map B's &lt;map> element has no effect in
          this case. Another way to view this is that a key reference to the scope "scope-b.somekey" is equivalent to the unscoped reference "somekey" processed in the context of Map B as the root
          map. In both cases, the presence of @keyscope on Map B's &lt;map> element has no effect, in the first case (peer key reference) because it is explicitly ignored, in the second because the
          key reference will necessarily be within the scope "scope-b" and therefore does not need to be scope qualified.</p></note></p>
        <p>For local-scope map references, the @keyscope attribute values on the
          map reference and the map element are merged, meaning that both the
          scopes named on the map reference and on the map will be resolvable
          for key references processed in the context of the referencing parent
          root map. The referenced map does not create another level of scope
          hierarchy when referenced as a sub map.<note>This rule ensures that
          the same key reference (e.g., "scope-b.somekey") will resolve to the
          same resource whether the referenced map is referenced as a local map
          (sub map) or a peer map.</note></p>
      </conbody>
    </concept>
  </topic>
</dita>
